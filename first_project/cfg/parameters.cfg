#!/usr/bin/env python

#WARNING: this file is in python!!

PACKAGE = "first_project" #package name

from dynamic_reconfigure.parameter_generator_catkin import *

gen_xy = ParameterGenerator() # parameter generator to set new coordinates

# gen.const ("name", type, value, "description") here we create constant types for steering modes

odom_type = gen_xy.enum([gen_xy.const ("differential", int_t, 0, "sets steering to differential drive"),
			gen_xy.const ("ackermann", int_t, 1, "sets steering to ackermann steering")], "driving modes") # generate the list of possible driving modes

# gen.add ("name", type, level, "description", default, min, max)
gen_xy.add("odom_mode", int_t, 0, "A parameter to switch between differential drive and ackermann steering", 0, 0, 1, edit_method = odom_type) # add a parameter for odometry calculation mode, default: differential drive mode

XYtouple = gen_xy.add_group("coordinates")

XYtouple.add("newX", double_t, 1, "sets newX")
XYtouple.add("newY", double_t, 1, "sets newY")

gen_xy.generate(PACKAGE, "tf_odom_pub", "xyparameters")

#TODO tupla per [x,y] e gen_xy

exit()# generate our parameter file when we exit
